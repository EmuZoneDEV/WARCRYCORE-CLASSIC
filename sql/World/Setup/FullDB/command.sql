/*
Navicat MySQL Data Transfer

Source Server         : ROOT
Source Server Version : 50644
Source Host           : 213.202.252.11:3306
Source Database       : wow_world

Target Server Type    : MYSQL
Target Server Version : 50644
File Encoding         : 65001

Date: 2019-07-04 00:44:41
*/

SET FOREIGN_KEY_CHECKS=0;
-- ----------------------------
-- Table structure for `command`
-- ----------------------------
DROP TABLE IF EXISTS `command`;
CREATE TABLE `command` (
  `name` varchar(50) NOT NULL DEFAULT '' COMMENT 'The Command Name.',
  `security` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT 'The minimum security level to use the command (See account.gmlevel) in the realm',
  `help` longtext COMMENT 'The help text for the command which explains it''s use and parameters.',
  PRIMARY KEY (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='Chat System';

-- ----------------------------
-- Records of command
-- ----------------------------
INSERT INTO `command` VALUES ('account', '0', 'Syntax: .accountDisplay the access level of your account.');
INSERT INTO `command` VALUES ('account characters', '3', 'Syntax: .account characters [#accountId|$accountName]\r\n\r\nShow list all characters for account selected by provided #accountId or $accountName, or for selected player in game.');
INSERT INTO `command` VALUES ('account create', '4', 'Syntax: .account create $account $passwordCreate account and set password to it.');
INSERT INTO `command` VALUES ('account delete', '4', 'Syntax: .account delete $accountDelete account with all characters.');
INSERT INTO `command` VALUES ('account lock', '0', 'Syntax: .account lock [on|off]Allow login from account only from current used IP or remove this requirement.');
INSERT INTO `command` VALUES ('account onlinelist', '4', 'Syntax: .account onlinelistShow list of online accounts.');
INSERT INTO `command` VALUES ('account password', '0', 'Syntax: .account password $old_password $new_password $new_passwordChange your account password.');
INSERT INTO `command` VALUES ('account set addon', '3', 'Syntax: .account set addon [#accountId|$accountName] #addon\r\n\r\nSet user (possible targeted) expansion addon level allowed. Addon values: 0 - normal, 1 - tbc, 2 - wotlk.');
INSERT INTO `command` VALUES ('account set gmlevel', '4', 'Syntax: .account set gmlevel [#accountId|$accountName] #level\r\n\r\nSet the security level for targeted player (can\'t be used at self) or for #accountId or $accountName to a level of #level.\r\n\r\n#level may range from 0 to 3.');
INSERT INTO `command` VALUES ('account set password', '4', 'Syntax: .account set password (#accountId|$accountName) $password $password\r\n\r\nSet password for account.');
INSERT INTO `command` VALUES ('additem', '3', 'Syntax: .additem #itemid/[#itemname]/#shift-click-item-link #itemcountAdds the specified number of items of id #itemid (or exact (!) name $itemname in brackets, or link created by shift-click at item in inventory or recipe) to your or selected character inventory. If #itemcount is omitted, only one item will be added..');
INSERT INTO `command` VALUES ('additemset', '3', 'Syntax: .additemset #itemsetidAdd items from itemset of id #itemsetid to your or selected character inventory. Will add by one example each item from itemset.');
INSERT INTO `command` VALUES ('ahbot items amount', '3', 'Syntax: .ahbot items amount $GreyItems $WhiteItems $GreenItems $BlueItems $PurpleItems $OrangeItems $YellowItems\r\n\r\nSet amount of each items color be selled on auction.');
INSERT INTO `command` VALUES ('ahbot items amount blue', '3', 'Syntax: .ahbot items amount blue $BlueItems\r\n\r\nSet amount of Blue color items be selled on auction.');
INSERT INTO `command` VALUES ('ahbot items amount green', '3', 'Syntax: .ahbot items amount green $GreenItems\r\n\r\nSet amount of Green color items be selled on auction.');
INSERT INTO `command` VALUES ('ahbot items amount grey', '3', 'Syntax: .ahbot items amount grey $GreyItems\r\n\r\nSet amount of Grey color items be selled on auction.');
INSERT INTO `command` VALUES ('ahbot items amount orange', '3', 'Syntax: .ahbot items amount orange $OrangeItems\r\n\r\nSet amount of Orange color items be selled on auction.');
INSERT INTO `command` VALUES ('ahbot items amount purple', '3', 'Syntax: .ahbot items amount purple $PurpleItems\r\n\r\nSet amount of Purple color items be selled on auction.');
INSERT INTO `command` VALUES ('ahbot items amount white', '3', 'Syntax: .ahbot items amount white $WhiteItems\r\n\r\nSet amount of White color items be selled on auction.');
INSERT INTO `command` VALUES ('ahbot items amount yellow', '3', 'Syntax: .ahbot items amount yellow $YellowItems\r\n\r\nSet amount of Yellow color items be selled on auction.');
INSERT INTO `command` VALUES ('ahbot items ratio', '3', 'Syntax: .ahbot items ratio $allianceratio $horderatio $neutralratio\r\n\r\nSet ratio of items in 3 auctions house.');
INSERT INTO `command` VALUES ('ahbot items ratio alliance', '3', 'Syntax: .ahbot items ratio alliance $allianceratio\r\n\r\nSet ratio of items in alliance auction house.');
INSERT INTO `command` VALUES ('ahbot items ratio horde', '3', 'Syntax: .ahbot items ratio horde $horderatio\r\n\r\nSet ratio of items in horde auction house.');
INSERT INTO `command` VALUES ('ahbot items ratio neutral', '3', 'Syntax: .ahbot items ratio neutral $neutralratio\r\n\r\nSet ratio of items in $neutral auction house.');
INSERT INTO `command` VALUES ('ahbot rebuild', '3', 'Syntax: .ahbot rebuild [all]\r\n\r\nExpire all actual auction of ahbot except bided by player. Binded auctions included to expire if \"all\" option used. Ahbot re-fill auctions base at current settings then.');
INSERT INTO `command` VALUES ('ahbot reload', '3', 'Syntax: .ahbot reload\r\n\r\nReload AHBot settings from configuration file.');
INSERT INTO `command` VALUES ('ahbot status', '3', 'Syntax: .ahbot status [all]\r\n\r\nShow current ahbot state data in short form, and with \"all\" with details.');
INSERT INTO `command` VALUES ('announce', '1', 'Syntax: .announce $MessageToBroadcastSend a global message to all players online in chat log.');
INSERT INTO `command` VALUES ('appear', '1', 'Syntax: .appear [$charactername]Teleport to the given character. Either specify the character name or click on the character\'s portrait, e.g. when you are in a group. Character can be offline.');
INSERT INTO `command` VALUES ('auction', '3', 'Syntax: .auction\r\n\r\nShow your team auction store.');
INSERT INTO `command` VALUES ('auction alliance', '3', 'Syntax: .auction alliance\r\n\r\nShow alliance auction store independent from your team.');
INSERT INTO `command` VALUES ('auction goblin', '3', 'Syntax: .auction goblin\r\n\r\nShow goblin auction store common for all teams.');
INSERT INTO `command` VALUES ('auction horde', '3', 'Syntax: .auction horde\r\n\r\nShow horde auction store independent from your team.');
INSERT INTO `command` VALUES ('auction item', '3', 'Syntax: .auction item (alliance|horde|goblin) #itemid[:#itemcount] [[[#minbid] #buyout] [short|long|verylong]\r\n\r\nAdd new item (in many stackes if amount grater stack size) to specific auction house at short|long|verylogn perios similar same settings in auction in game dialog. Created auction not have owner.');
INSERT INTO `command` VALUES ('aura', '3', 'Syntax: .aura #spellidAdd the aura from spell #spellid to the selected Unit.');
INSERT INTO `command` VALUES ('ban account', '3', 'Syntax: .ban account $Name $bantime $reasonBan account kick player.$bantime: negative value leads to permban, otherwise use a timestring like 4d20h3s\"\".\"');
INSERT INTO `command` VALUES ('ban character', '3', 'Syntax: .ban character $Name $bantime $reasonBan account and kick player.$bantime: negative value leads to permban, otherwise use a timestring like 4d20h3s\"\".\"');
INSERT INTO `command` VALUES ('ban ip', '3', 'Syntax: .ban ip $Ip $bantime $reasonBan IP.$bantime: negative value leads to permban, otherwise use a timestring like 4d20h3s\"\".\"');
INSERT INTO `command` VALUES ('baninfo account', '3', 'Syntax: .baninfo account $accountidWatch full information about a specific ban.');
INSERT INTO `command` VALUES ('baninfo character', '3', 'Syntax: .baninfo character $charactername Watch full information about a specific ban.');
INSERT INTO `command` VALUES ('baninfo ip', '3', 'Syntax: .baninfo ip $ipWatch full information about a specific ban.');
INSERT INTO `command` VALUES ('bank', '3', 'Syntax: .bankShow your bank inventory.');
INSERT INTO `command` VALUES ('banlist account', '3', 'Syntax: .banlist account [$Name]Searches the banlist for a account name pattern or show full list account bans.');
INSERT INTO `command` VALUES ('banlist character', '3', 'Syntax: .banlist character $NameSearches the banlist for a character name pattern. Pattern required.');
INSERT INTO `command` VALUES ('banlist ip', '3', 'Syntax: .banlist ip [$Ip]Searches the banlist for a IP pattern or show full list of IP bans.');
INSERT INTO `command` VALUES ('cast', '3', 'Syntax: .cast #spellid [triggered]  Cast #spellid to selected target. If no target selected cast to self. If \'trigered\' or part provided then spell casted with triggered flag.');
INSERT INTO `command` VALUES ('cast back', '3', 'Syntax: .cast back #spellid [triggered]  Selected target will cast #spellid to your character. If \'trigered\' or part provided then spell casted with triggered flag.');
INSERT INTO `command` VALUES ('cast dist', '3', 'Syntax: .cast dist #spellid [#dist [triggered]]  You will cast spell to pint at distance #dist. If \'trigered\' or part provided then spell casted with triggered flag. Not all spells can be casted as area spells.');
INSERT INTO `command` VALUES ('cast self', '3', 'Syntax: .cast self #spellid [triggered]Cast #spellid by target at target itself. If \'trigered\' or part provided then spell casted with triggered flag.');
INSERT INTO `command` VALUES ('cast target', '3', 'Syntax: .cast target #spellid [triggered]  Selected target will cast #spellid to his victim. If \'trigered\' or part provided then spell casted with triggered flag.');
INSERT INTO `command` VALUES ('character deleted delete', '4', 'Syntax: .character deleted delete #guid|$name\r\n\r\nCompletely deletes the selected characters.\r\nIf $name is supplied, only characters with that string in their name will be deleted, if #guid is supplied, only the character with that GUID will be deleted.');
INSERT INTO `command` VALUES ('character deleted list', '3', 'Syntax: .character deleted list [#guid|$name]\r\n\r\nShows a list with all deleted characters.\r\nIf $name is supplied, only characters with that string in their name will be selected, if #guid is supplied, only the character with that GUID will be selected.');
INSERT INTO `command` VALUES ('character deleted old', '4', 'Syntax: .character deleted old [#keepDays]\r\n\r\nCompletely deletes all characters with deleted time longer #keepDays. If #keepDays not provided the  used value from mangosd.conf option \'CharDelete.KeepDays\'. If referenced config option disabled (use 0 value) then command can\'t be used without #keepDays.');
INSERT INTO `command` VALUES ('character deleted restore', '3', 'Syntax: .character deleted restore #guid|$name [$newname] [#new account]\r\n\r\nRestores deleted characters.\r\nIf $name is supplied, only characters with that string in their name will be restored, if $guid is supplied, only the character with that GUID will be restored.\r\nIf $newname is set, the character will be restored with that name instead of the original one. If #newaccount is set, the character will be restored to specific account character list. This works only with one character!');
INSERT INTO `command` VALUES ('character erase', '4', 'Syntax: .character erase $name\r\n\r\nDelete character $name. Character finally deleted in case any deleting options.');
INSERT INTO `command` VALUES ('character level', '3', 'Syntax: .character level [$playername] [#level]Set the level of character with $playername (or the selected if not name provided) by #numberoflevels Or +1 if no #numberoflevels provided). If #numberoflevels is omitted, the level will be increase by 1. If #numberoflevels is 0, the same level will be restarted. If no character is selected and name not provided, increase your level. Command can be used for offline character. All stats and dependent values recalculated. At level decrease talents can be reset if need. Also at level decrease equipped items with greater level requirement can be lost.');
INSERT INTO `command` VALUES ('character rename', '2', 'Syntax: .character rename [$name]Mark selected in game or by $name in command character for rename at next login.');
INSERT INTO `command` VALUES ('character reputation', '2', 'Syntax: .character reputation [$player_name]Show reputation information for selected player or player find by $player_name.');
INSERT INTO `command` VALUES ('combatstop', '2', 'Syntax: .combatstop [$playername]Stop combat for selected character. If selected non-player then command applied to self. If $playername provided then attempt applied to online player $playername.');
INSERT INTO `command` VALUES ('commands', '0', 'Syntax: .commandsDisplay a list of available commands for your account level.');
INSERT INTO `command` VALUES ('cooldown', '3', 'Syntax: .cooldown [#spell_id]Remove all (if spell_id not provided) or #spel_id spell cooldown from selected character or you (if no selection).');
INSERT INTO `command` VALUES ('damage', '3', 'Syntax: .damage $damage_amount [$school [$spellid]]Apply $damage to target. If not $school and $spellid provided then this flat clean melee damage without any modifiers. If $school provided then damage modified by armor reduction (if school physical), and target absorbing modifiers and result applied as melee damage to target. If spell provided then damage modified and applied as spell damage. $spellid can be shift-link.');
INSERT INTO `command` VALUES ('debug anim', '2', 'Syntax: .debug anim #emoteidPlay emote #emoteid for your character.');
INSERT INTO `command` VALUES ('debug bg', '3', 'Syntax: .debug bgToggle debug mode for battlegrounds. In debug mode GM can start battleground with single player.');
INSERT INTO `command` VALUES ('debug getitemvalue', '3', 'Syntax: .debug getitemvalue #itemguid #field [int|hex|bit|float]\r\n\r\nGet the field #field of the item #itemguid in your inventroy.\r\n\r\nUse type arg for set output format: int (decimal number), hex (hex value), bit (bitstring), float. By default use integer output.');
INSERT INTO `command` VALUES ('debug getvalue', '3', 'Syntax: .debug getvalue #field [int|hex|bit|float]\r\n\r\nGet the field #field of the selected target. If no target is selected, get the content of your field.\r\n\r\nUse type arg for set output format: int (decimal number), hex (hex value), bit (bitstring), float. By default use integer output.');
INSERT INTO `command` VALUES ('debug moditemvalue', '3', 'Syntax: .debug moditemvalue #guid #field [int|float| &= | |= | &=~ ] #value\r\n\r\nModify the field #field of the item #itemguid in your inventroy by value #value. \r\n\r\nUse type arg for set mode of modification: int (normal add/subtract #value as decimal number), float (add/subtract #value as float number), &= (bit and, set to 0 all bits in value if it not set to 1 in #value as hex number), |= (bit or, set to 1 all bits in value if it set to 1 in #value as hex number), &=~ (bit and not, set to 0 all bits in value if it set to 1 in #value as hex number). By default expect integer add/subtract.');
INSERT INTO `command` VALUES ('debug modvalue', '3', 'Syntax: .debug modvalue #field [int|float| &= | |= | &=~ ] #value\r\n\r\nModify the field #field of the selected target by value #value. If no target is selected, set the content of your field.\r\n\r\nUse type arg for set mode of modification: int (normal add/subtract #value as decimal number), float (add/subtract #value as float number), &= (bit and, set to 0 all bits in value if it not set to 1 in #value as hex number), |= (bit or, set to 1 all bits in value if it set to 1 in #value as hex number), &=~ (bit and not, set to 0 all bits in value if it set to 1 in #value as hex number). By default expect integer add/subtract.');
INSERT INTO `command` VALUES ('debug play cinematic', '1', 'Syntax: .debug play cinematic #cinematicidPlay cinematic #cinematicid for you. You stay at place while your mind fly.');
INSERT INTO `command` VALUES ('debug play sound', '1', 'Syntax: .debug play sound #soundidPlay sound with #soundid.Sound will be play only for you. Other players do not hear this.Warning: client may have more 5000 sounds...');
INSERT INTO `command` VALUES ('debug setitemvalue', '3', 'Syntax: .debug setitemvalue #guid #field [int|hex|bit|float] #value\r\n\r\nSet the field #field of the item #itemguid in your inventroy to value #value.\r\n\r\nUse type arg for set input format: int (decimal number), hex (hex value), bit (bitstring), float. By default expect integer input format.');
INSERT INTO `command` VALUES ('debug setvalue', '3', 'Syntax: .debug setvalue #field [int|hex|bit|float] #value\r\n\r\nSet the field #field of the selected target to value #value. If no target is selected, set the content of your field.\r\n\r\nUse type arg for set input format: int (decimal number), hex (hex value), bit (bitstring), float. By default expect integer input format.');
INSERT INTO `command` VALUES ('debug spellcoefs', '3', 'Syntax: .debug spellcoefs #spellid\r\n\r\nShow default calculated and DB stored coefficients for direct/dot heal/damage.');
INSERT INTO `command` VALUES ('debug spellmods', '3', 'Syntax: .debug spellmods (flat|pct) #spellMaskBitIndex #spellModOp #value\r\n\r\nSet at client side spellmod affect for spell that have bit set with index #spellMaskBitIndex in spell family mask for values dependent from spellmod #spellModOp to #value.');
INSERT INTO `command` VALUES ('ticket respond', '2', 'Syntax: .ticket respond (#ID|$name) $responce_text\nSend your responce to the ticket as whisper chat.');
INSERT INTO `command` VALUES ('ticket show', '2', 'Syntax: .ticket show (#ID|$name)\nShow details about the ticket.');
INSERT INTO `command` VALUES ('demorph', '2', 'Syntax: .demorphDemorph the selected player.');
INSERT INTO `command` VALUES ('die', '3', 'Syntax: .dieKill the selected player. If no player is selected, it will kill you.');
INSERT INTO `command` VALUES ('dismount', '0', 'Syntax: .dismountDismount you, if you are mounted.');
INSERT INTO `command` VALUES ('distance', '3', 'Syntax: .distance [$name/$link]Display the distance from your character to the selected creature/player, or player with name $name, or player/creature/gameobject pointed to shift-link with guid.');
INSERT INTO `command` VALUES ('event', '2', 'Syntax: .event #event_idShow details about event with #event_id.');
INSERT INTO `command` VALUES ('event list', '2', 'Syntax: .event listShow list of currently active events.Show list of all events');
INSERT INTO `command` VALUES ('event start', '2', 'Syntax: .event start #event_idStart event #event_id. Set start time for event to current moment (change not saved in DB).');
INSERT INTO `command` VALUES ('event stop', '2', 'Syntax: .event stop #event_idStop event #event_id. Set start time for event to time in past that make current moment is event stop time (change not saved in DB).');
INSERT INTO `command` VALUES ('explorecheat', '3', 'Syntax: .explorecheat #flagReveal  or hide all maps for the selected player. If no player is selected, hide or reveal maps to you.Use a #flag of value 1 to reveal, use a #flag value of 0 to hide all maps.');
INSERT INTO `command` VALUES ('gm', '1', 'Syntax: .gm [on/off]Enable or Disable in game GM MODE or show current state of on/off not provided.');
INSERT INTO `command` VALUES ('gm chat', '1', 'Syntax: .gm chat [on/off]Enable or disable chat GM MODE (show gm badge in messages) or show current state of on/off not provided.');
INSERT INTO `command` VALUES ('gm fly', '3', 'Syntax: .gm fly [on/off]Enable/disable gm fly mode.');
INSERT INTO `command` VALUES ('gm ingame', '0', 'Syntax: .gm ingameDisplay a list of available in game Game Masters.');
INSERT INTO `command` VALUES ('gm list', '3', 'Syntax: .gm listDisplay a list of all Game Masters accounts and security levels.');
INSERT INTO `command` VALUES ('gm setview', '1', 'Syntax: .gm setview\r\n\r\nSet farsight view on selected unit. Select yourself to set view back.');
INSERT INTO `command` VALUES ('gm visible', '1', 'Syntax: .gm visible on/offOutput current visibility state or make GM visible(on) and invisible(off) for other players.');
INSERT INTO `command` VALUES ('go', '1', 'Syntax: .go  [$playername|pointlink|#x #y #z [#mapid]]\r\nTeleport your character to point with coordinates of player $playername, or coordinates of one from shift-link types: player, tele, taxinode, creature/creature_entry, gameobject/gameobject_entry, or explicit #x #y #z #mapid coordinates.');
INSERT INTO `command` VALUES ('go creature', '1', 'Syntax: .go creature (#creature_guid|$creature_name|id #creature_id)\r\nTeleport your character to creature with guid #creature_guid, or teleport your character to creature with name including as part $creature_name substring, or teleport your character to a creature that was spawned from the template with this entry #creature_id.');
INSERT INTO `command` VALUES ('go graveyard', '1', 'Syntax: .go graveyard #graveyardId Teleport to graveyard with the graveyardId specified.');
INSERT INTO `command` VALUES ('go grid', '1', 'Syntax: .go grid #gridX #gridY [#mapId]Teleport the gm to center of grid with provided indexes at map #mapId (or current map if it not provided).');
INSERT INTO `command` VALUES ('go object', '1', 'Syntax: .go object (#gameobject_guid|$gameobject_name|id #gameobject_id)\r\nTeleport your character to gameobject with guid #gameobject_guid, or teleport your character to gameobject with name including as part $gameobject_name substring, or teleport your character to a gameobject that was spawned from the template with this entry #gameobject_id.');
INSERT INTO `command` VALUES ('go taxinode', '1', 'Syntax: .go taxinode #taxinodeTeleport player to taxinode coordinates. You can look up zone using .lookup taxinode $namepart');
INSERT INTO `command` VALUES ('go trigger', '1', 'Syntax: .go trigger (#trigger_id|$trigger_shift-link|$trigger_target_shift-link) [target]\r\n\r\nTeleport your character to areatrigger with id #trigger_id or trigger id associated with shift-link. If additional arg \"target\" provided then character will telported to areatrigger target point.');
INSERT INTO `command` VALUES ('go xy', '1', 'Syntax: .go xy #x #y [#mapid]Teleport player to point with (#x,#y) coordinates at ground(water) level at map #mapid or same map if #mapid not provided.');
INSERT INTO `command` VALUES ('go xyz', '1', 'Syntax: .go xyz #x #y #z [#mapid]Teleport player to point with (#x,#y,#z) coordinates at ground(water) level at map #mapid or same map if #mapid not provided.');
INSERT INTO `command` VALUES ('go zonexy', '1', 'Syntax: .go zonexy #x #y [#zone]Teleport player to point with (#x,#y) client coordinates at ground(water) level in zone #zoneid or current zone if #zoneid not provided. You can look up zone using .lookup area $namepart');
INSERT INTO `command` VALUES ('gobject add', '2', 'Syntax: .gobject add #id <spawntimeSecs>Add a game object from game object templates to the world at your current location using the #id.spawntimesecs sets the spawntime, it is optional.Note: this is a copy of .gameobject.');
INSERT INTO `command` VALUES ('gobject delete', '2', 'Syntax: .gobject delete #go_guidDelete gameobject with guid #go_guid.');
INSERT INTO `command` VALUES ('gobject move', '2', 'Syntax: .gobject move #goguid [#x #y #z]Move gameobject #goguid to character coordinates (or to (#x,#y,#z) coordinates if its provide).');
INSERT INTO `command` VALUES ('gobject near', '2', 'Syntax: .gobject near  [#distance]Output gameobjects at distance #distance from player. Output gameobject guids and coordinates sorted by distance from character. If #distance not provided use 10 as default value.');
INSERT INTO `command` VALUES ('gobject target', '2', 'Syntax: .gobject target [#go_id|#go_name_part]Locate and show position nearest gameobject. If #go_id or #go_name_part provide then locate and show position of nearest gameobject with gameobject template id #go_id or name included #go_name_part as part.');
INSERT INTO `command` VALUES ('gobject turn', '2', 'Syntax: .gobject turn #goguid Set for gameobject #goguid orientation same as current character orientation.');
INSERT INTO `command` VALUES ('gps', '1', 'Syntax: .gps [$name|$shift-link]Display the position information for a selected character or creature (also if player name $name provided then for named player, or if creature/gameobject shift-link provided then pointed creature/gameobject if it loaded). Position information includes X, Y, Z, and orientation, map Id and zone Id');
INSERT INTO `command` VALUES ('groupgo', '1', 'Syntax: .groupgo [$charactername]Teleport the given character and his group to you. Teleported only online characters but original selected group member can be offline.');
INSERT INTO `command` VALUES ('guid', '2', 'Syntax: .guidDisplay the GUID for the selected character.');
INSERT INTO `command` VALUES ('guild create', '2', 'Syntax: .guild create [$GuildLeaderName] $GuildName\"\"Create a guild named $GuildName with the player $GuildLeaderName (or selected) as leader.  Guild name must in quotes.\"');
INSERT INTO `command` VALUES ('guild delete', '2', 'Syntax: .guild delete $GuildName\"\"Delete guild $GuildName. Guild name must in quotes.\"');
INSERT INTO `command` VALUES ('guild invite', '2', 'Syntax: .guild invite [$CharacterName] $GuildName\"\"Add player $CharacterName (or selected) into a guild $GuildName. Guild name must in quotes.\"');
INSERT INTO `command` VALUES ('guild rank', '2', 'Syntax: .guild rank $CharacterName #RankSet for $CharacterName rank #Rank in a guild.');
INSERT INTO `command` VALUES ('guild uninvite', '2', 'Syntax: .guild uninvite [$CharacterName]Remove player $CharacterName (or selected) from a guild.');
INSERT INTO `command` VALUES ('help', '0', 'Syntax: .help [$command]Display usage instructions for the given $command. If no $command provided show list available commands.');
INSERT INTO `command` VALUES ('hidearea', '3', 'Syntax: .hidearea #areaidHide the area of #areaid to the selected character. If no character is selected, hide this area to you.');
INSERT INTO `command` VALUES ('honor add', '2', 'Syntax: .honor add $amountAdd a certain amount of honor (gained in lifetime) to the selected player.');
INSERT INTO `command` VALUES ('honor addkill', '2', 'Syntax: .honor addkill\r\n\r\nAdd the targeted unit as one of your pvp kills today (you only get honor if it\'s a racial leader or a player)');
INSERT INTO `command` VALUES ('honor show', '1', 'Syntax: .honor showDisplay the honor stats of the selected player');
INSERT INTO `command` VALUES ('honor update', '2', 'Syntax: .honor updateForce honor to be update');
INSERT INTO `command` VALUES ('instance listbinds', '3', 'Syntax: .instance listbinds  Lists the binds of the selected player.');
INSERT INTO `command` VALUES ('instance savedata', '3', 'Syntax: .instance savedata  Save the InstanceData for the current player\'s map to the DB.');
INSERT INTO `command` VALUES ('instance stats', '3', 'Syntax: .instance stats  Shows statistics about instances.');
INSERT INTO `command` VALUES ('instance unbind', '3', 'Syntax: .instance unbind all  All of the selected player\'s binds will be cleared..instance unbind #mapid Only the specified #mapid instance will be cleared.');
INSERT INTO `command` VALUES ('itemmove', '2', 'Syntax: .itemmove #sourceslotid #destinationslotidMove an item from slots #sourceslotid to #destinationslotid in your inventoryNot yet implemented');
INSERT INTO `command` VALUES ('kick', '2', 'Syntax: .kick [$charactername]Kick the given character name from the world. If no character name is provided then the selected player (except for yourself) will be kicked.');
INSERT INTO `command` VALUES ('learn', '3', 'Syntax: .learn #spell [all]Selected character learn a spell of id #spell. If \'all\' provided then all ranks learned.');
INSERT INTO `command` VALUES ('learn all', '3', 'Syntax: .learn allLearn all big set different spell maybe useful for Administaror.');
INSERT INTO `command` VALUES ('learn all_crafts', '2', 'Syntax: .learn craftsLearn all professions and recipes.');
INSERT INTO `command` VALUES ('learn all_default', '1', 'Syntax: .learn all_default [$playername]Learn for selected/$playername player all default spells for his race/class and spells rewarded by completed quests.');
INSERT INTO `command` VALUES ('learn all_gm', '2', 'Syntax: .learn all_gmLearn all default spells for Game Masters.');
INSERT INTO `command` VALUES ('learn all_lang', '1', 'Syntax: .learn all_langLearn all languages');
INSERT INTO `command` VALUES ('learn all_myclass', '3', 'Syntax: .learn all_myclassLearn all spells and talents available for his class.');
INSERT INTO `command` VALUES ('learn all_myspells', '3', 'Syntax: .learn all_myspellsLearn all spells (except talents and spells with first rank learned as talent) available for his class.');
INSERT INTO `command` VALUES ('learn all_mytalents', '3', 'Syntax: .learn all_mytalentsLearn all talents (and spells with first rank learned as talent) available for his class.');
INSERT INTO `command` VALUES ('learn all_recipes', '2', 'Syntax: .learn all_recipes [$profession]Learns all recipes of specified profession and sets skill level to max.Example: .learn all_recipes enchanting');
INSERT INTO `command` VALUES ('levelup', '3', 'Syntax: .levelup [$playername] [#numberoflevels]Increase/decrease the level of character with $playername (or the selected if not name provided) by #numberoflevels Or +1 if no #numberoflevels provided). If #numberoflevels is omitted, the level will be increase by 1. If #numberoflevels is 0, the same level will be restarted. If no character is selected and name not provided, increase your level. Command can be used for offline character. All stats and dependent VALUESrecalculated. At level decrease talents can be reset if need. Also at level decrease equipped items with greater level requirement can be lost.');
INSERT INTO `command` VALUES ('linkgrave', '3', 'Syntax: .linkgrave #graveyard_id [alliance|horde]Link current zone to graveyard for any (or alliance/horde faction ghosts). This let character ghost from zone teleport to graveyard after die if graveyard is nearest from linked to zone and accept ghost of this faction. Add only single graveyard at another map and only if no graveyards linked (or planned linked at same map).');
INSERT INTO `command` VALUES ('list creature', '3', 'Syntax: .list creature #creature_id [#max_count]Output creatures with creature id #creature_id found in world. Output creature guids and coordinates sorted by distance from character. Will be output maximum #max_count creatures. If #max_count not provided use 10 as default value.');
INSERT INTO `command` VALUES ('list item', '3', 'Syntax: .list item #item_id [#max_count]Output items with item id #item_id found in all character inventories, mails, auctions, and guild banks. Output item guids, item owner guid, owner account and owner name (guild name and guid in case guild bank). Will be output maximum #max_count items. If #max_count not provided use 10 as default value.');
INSERT INTO `command` VALUES ('list object', '3', 'Syntax: .list object #gameobject_id [#max_count]Output gameobjects with gameobject id #gameobject_id found in world. Output gameobject guids and coordinates sorted by distance from character. Will be output maximum #max_count gameobject. If #max_count not provided use 10 as default value.');
INSERT INTO `command` VALUES ('list talents', '3', 'Syntax: .list talents\r\n\r\nShow list all really known (as learned spells) talent rank spells for selected player or self.');
INSERT INTO `command` VALUES ('loadscripts', '3', 'Syntax: .loadscripts $scriptlibrarynameUnload current and load the script library $scriptlibraryname or reload current if $scriptlibraryname omitted, in case you changed it while the server was running.');
INSERT INTO `command` VALUES ('lookup account email', '2', 'Syntax: .lookup account email $emailpart [#limit] \r\n\r\n Searchs accounts, which email including $emailpart with optional parametr #limit of results. If #limit not provided expected 100.');
INSERT INTO `command` VALUES ('lookup account ip', '2', 'Syntax: lookup account ip $ippart [#limit] \r\n\r\n Searchs accounts, which last used ip inluding $ippart (textual) with optional parametr #$limit of results. If #limit not provided expected 100.');
INSERT INTO `command` VALUES ('lookup account name', '2', 'Syntax: .lookup account name $accountpart [#limit] \r\n\r\n Searchs accounts, which username including $accountpart with optional parametr #limit of results. If #limit not provided expected 100.');
INSERT INTO `command` VALUES ('lookup area', '1', 'Syntax: .lookup area $namepartLooks up an area by $namepart, and returns all matches with their area ID\'s.');
INSERT INTO `command` VALUES ('lookup creature', '3', 'Syntax: .lookup creature $namepartLooks up a creature by $namepart, and returns all matches with their creature ID\'s.');
INSERT INTO `command` VALUES ('lookup event', '2', 'Syntax: .lookup event $nameAttempts to find the ID of the event with the provided $name.');
INSERT INTO `command` VALUES ('lookup faction', '3', 'Syntax: .lookup faction $nameAttempts to find the ID of the faction with the provided $name.');
INSERT INTO `command` VALUES ('lookup item', '3', 'Syntax: .lookup item $itemnameLooks up an item by $itemname, and returns all matches with their Item ID\'s.');
INSERT INTO `command` VALUES ('lookup itemset', '3', 'Syntax: .lookup itemset $itemnameLooks up an item set by $itemname, and returns all matches with their Item set ID\'s.');
INSERT INTO `command` VALUES ('lookup object', '3', 'Syntax: .lookup object $objnameLooks up an gameobject by $objname, and returns all matches with their Gameobject ID\'s.');
INSERT INTO `command` VALUES ('lookup player account', '2', 'Syntax: .lookup player account $accountpart [#limit] \r\n\r\n Searchs players, which account username including $accountpart with optional parametr #limit of results. If #limit not provided expected 100.');
INSERT INTO `command` VALUES ('lookup player email', '2', 'Syntax: .lookup player email $emailpart [#limit] \r\n\r\n Searchs players, which account email including $emailpart with optional parametr #limit of results. If #limit not provided expected 100.');
INSERT INTO `command` VALUES ('lookup player ip', '2', 'Syntax: .lookup player ip $ippart [#limit] \r\n\r\n Searchs players, which account last used ip inluding $ippart (textual) with optional parametr #limit of results. If #limit not provided expected 100.');
INSERT INTO `command` VALUES ('lookup pool', '2', 'Syntax: .lookup pool $pooldescpart\r\n\r\nList of pools (anywhere) with substring in description.');
INSERT INTO `command` VALUES ('lookup quest', '3', 'Syntax: .lookup quest $namepartLooks up a quest by $namepart, and returns all matches with their quest ID\'s.');
INSERT INTO `command` VALUES ('lookup skill', '3', 'Syntax: .lookup skill $$namepartLooks up a skill by $namepart, and returns all matches with their skill ID\'s.');
INSERT INTO `command` VALUES ('lookup spell', '3', 'Syntax: .lookup spell $namepartLooks up a spell by $namepart, and returns all matches with their spell ID\'s.');
INSERT INTO `command` VALUES ('lookup taxinode', '3', 'Syntax: .lookup taxinode $substringSearch and output all taxinodes with provide $substring in name.');
INSERT INTO `command` VALUES ('lookup tele', '1', 'Syntax: .lookup tele $substringSearch and output all .tele command locations with provide $substring in name.');
INSERT INTO `command` VALUES ('maxskill', '3', 'Syntax: .maxskillSets all skills of the targeted player to their maximum VALUESfor its current level.');
INSERT INTO `command` VALUES ('modify aspeed', '1', 'Syntax: .modify aspeed #rateModify all speeds -run,swim,run back,swim back- of the selected player to \normalbase speed for this move type\"\"*rate. If no player is selected, modify your speed. #rate may range from 0.1 to 10.\"');
INSERT INTO `command` VALUES ('modify bwalk', '1', 'Syntax: .modify bwalk #rateModify the speed of the selected player while running backwards to \normal walk back speed\"\"*rate. If no player is selected, modify your speed. #rate may range from 0.1 to 10.\"');
INSERT INTO `command` VALUES ('modify drunk', '1', 'Syntax: .modify drunk #value Set drunk level to #value (0..100). Value 0 remove drunk state, 100 is max drunked state.');
INSERT INTO `command` VALUES ('modify energy', '1', 'Syntax: .modify energy #energyModify the energy of the selected player. If no player is selected, modify your energy.');
INSERT INTO `command` VALUES ('modify faction', '1', 'Syntax: .modify faction #factionid #flagid #npcflagid #dynamicflagidModify the faction and flags of the selected creature. Without arguments, display the faction and flags of the selected creature.');
INSERT INTO `command` VALUES ('modify gender', '2', 'Syntax: .modify gender male/femaleChange gender of selected player.');
INSERT INTO `command` VALUES ('modify honor', '2', 'Syntax: .modify honor $field $valueAdd $value to an honor $field (it\'s just for debug , values won\'t be saved at player logout)Field list: points / rank / todaykills / yesterdaykills / yesterdayhonor /thisweekkills / thisweekhonor / lastweekkills / lastweekhonor /lastweekstanding / lifetimedishonorablekills / lifetimehonorablekills ');
INSERT INTO `command` VALUES ('modify hp', '1', 'Syntax: .modify hp #newhpModify the hp of the selected player. If no player is selected, modify your hp.');
INSERT INTO `command` VALUES ('modify mana', '1', 'Syntax: .modify mana #newmanaModify the mana of the selected player. If no player is selected, modify your mana.');
INSERT INTO `command` VALUES ('modify money', '1', 'Syntax: .modify money #money.money #moneyAdd or remove money to the selected player. If no player is selected, modify your money. #gold can be negative to remove money.');
INSERT INTO `command` VALUES ('modify morph', '2', 'Syntax: .modify morph #displayidChange your current model id to #displayid.');
INSERT INTO `command` VALUES ('modify mount', '1', 'Syntax: .modify mount #id #speedDisplay selected player as mounted at #id creature and set speed to #speed value.');
INSERT INTO `command` VALUES ('modify rage', '1', 'Syntax: .modify rage #newrageModify the rage of the selected player. If no player is selected, modify your rage.');
INSERT INTO `command` VALUES ('modify rep', '2', 'Syntax: .modify rep #repId (#repvalue | $rankname [#delta])Sets the selected players reputation with faction #repId to #repvalue or to $reprank.If the reputation rank name is provided, the resulting reputation will be the lowest reputation for that rank plus the delta amount, if specified.You can use \'.pinfo rep\' to list all known reputation ids, or use \'.lookup faction $name\' to locate a specific faction id.');
INSERT INTO `command` VALUES ('modify scale', '1', 'Syntax: .modify scale #scale\r\n\r\nChange model scale for targeted player (util relogin) or creature (until respawn).');
INSERT INTO `command` VALUES ('modify speed', '1', 'Syntax: .modify speed #rate.speed #rateModify the running speed of the selected player to \normal base run speed\"\"*rate. If no player is selected, modify your speed. #rate may range from 0.1 to 10.\"');
INSERT INTO `command` VALUES ('modify standstate', '2', 'Syntax: .modify standstate #emoteidChange the emote of your character while standing to #emoteid.');
INSERT INTO `command` VALUES ('modify swim', '1', 'Syntax: .modify swim #rateModify the swim speed of the selected player to \normal swim speed\"\"*rate. If no player is selected, modify your speed. #rate may range from 0.1 to 10.\"');
INSERT INTO `command` VALUES ('movegens', '3', 'Syntax: .movegens  Show movement generators stack for selected creature or player.');
INSERT INTO `command` VALUES ('mute', '1', 'Syntax: .mute [$playerName] $timeInMinutesDisible chat messaging for any character from account of character $playerName (or currently selected) at $timeInMinutes minutes. Player can be offline.');
INSERT INTO `command` VALUES ('neargrave', '3', 'Syntax: .neargrave [alliance|horde]Find nearest graveyard linked to zone (or only nearest from accepts alliance or horde faction ghosts).');
INSERT INTO `command` VALUES ('notify', '1', 'Syntax: .notify $MessageToBroadcastSend a global message to all players online in screen.');
INSERT INTO `command` VALUES ('npc add', '2', 'Syntax: .npc add #creatureidSpawn a creature by the given template id of #creatureid.');
INSERT INTO `command` VALUES ('npc additem', '2', 'Syntax: .npc additem #itemId <#maxcount><#incrtime>r\r\n\r\nAdd item #itemid to item list of selected vendor. Also optionally set max count item in vendor item list and time to item count restoring.');
INSERT INTO `command` VALUES ('npc addweapon', '3', 'Not yet implemented.');
INSERT INTO `command` VALUES ('npc aiinfo', '2', 'Syntax: .npc npc aiinfo\r\n\r\nShow npc AI and script information.');
INSERT INTO `command` VALUES ('npc allowmove', '3', 'Syntax: .npc allowmoveEnable or disable movement creatures in world. Not implemented.');
INSERT INTO `command` VALUES ('npc changelevel', '2', 'Syntax: .npc changelevel #levelChange the level of the selected creature to #level.#level may range from 1 to 63.');
INSERT INTO `command` VALUES ('npc delete', '2', 'Syntax: .npc delete [#guid]Delete creature with guid #guid (or the selected if no guid is provided)');
INSERT INTO `command` VALUES ('npc delitem', '2', 'Syntax: .npc delitem #itemIdRemove item #itemid from item list of selected vendor.');
INSERT INTO `command` VALUES ('npc factionid', '2', 'Syntax: .npc factionid #factionidSet the faction of the selected creature to #factionid.');
INSERT INTO `command` VALUES ('npc flag', '2', 'Syntax: .npc flag #npcflagSet the NPC flags of creature template of the selected creature and selected creature to #npcflag. NPC flags will applied to all creatures of selected creature template after server restart or grid unload/load.');
INSERT INTO `command` VALUES ('npc follow', '2', 'Syntax: .npc followSelected creature start follow you until death/fight/etc.');
INSERT INTO `command` VALUES ('npc info', '3', 'Syntax: .npc infoDisplay a list of details for the selected creature.The list includes:- GUID, Faction, NPC flags, Entry ID, Model ID,- Level,- Health (current/maximum),- Field flags, dynamic flags, faction template, - Position information,- and the creature type, e.g. if the creature is a vendor.');
INSERT INTO `command` VALUES ('npc move', '2', 'Syntax: .npc move [#creature_guid]Move the targeted creature spawn point to your coordinates.');
INSERT INTO `command` VALUES ('npc name', '2', 'Syntax: .npc name $nameChange the name of the selected creature or character to $name.Command disabled.');
INSERT INTO `command` VALUES ('npc playemote', '3', 'Syntax: .npc playemote #emoteidMake the selected creature emote with an emote of id #emoteid.');
INSERT INTO `command` VALUES ('npc say', '1', 'Syntax: .npc say #text\r\nMake the selected npc says #text.');
INSERT INTO `command` VALUES ('npc setdeathstate', '2', 'Syntax: .npc setdeathstate on/offSet default death state (dead/alive) for npc at spawn.');
INSERT INTO `command` VALUES ('npc setmodel', '2', 'Syntax: .npc setmodel #displayidChange the model id of the selected creature to #displayid.');
INSERT INTO `command` VALUES ('npc setmovetype', '2', 'Syntax: .npc setmovetype [#creature_guid] stay/random/way [NODEL]Set for creature pointed by #creature_guid (or selected if #creature_guid not provided) movement type and move it to respawn position (if creature alive). Any existing waypoints for creature will be removed from the database if you do not use NODEL. If the creature is dead then movement type will applied at creature respawn.Make sure you use NODEL, if you want to keep the waypoints.');
INSERT INTO `command` VALUES ('npc spawndist', '2', 'Syntax: .npc spawndist #distAdjust spawndistance of selected creature to dist.');
INSERT INTO `command` VALUES ('npc spawntime', '2', 'Syntax: .npc spawntime #time Adjust spawntime of selected creature to time.');
INSERT INTO `command` VALUES ('npc subname', '2', 'Syntax: .npc subname $NameChange the subname of the selected creature or player to $Name.Command disabled.');
INSERT INTO `command` VALUES ('npc tame', '2', 'Syntax: .npc tameTame selected creature (tameable non pet creature). You don\'t must have pet.');
INSERT INTO `command` VALUES ('npc textemote', '1', 'Syntax: .npc textemote #emoteidMake the selected creature to do textemote with an emote of id #emoteid.');
INSERT INTO `command` VALUES ('npc unfollow', '2', 'Syntax: .npc unfollowSelected creature (non pet) stop follow you.');
INSERT INTO `command` VALUES ('npc whisper', '1', 'Syntax: .npc whisper #playerguid #textMake the selected npc whisper #text to  #playerguid.');
INSERT INTO `command` VALUES ('npc yell', '1', 'Syntax: .npc yell #text\r\nMake the selected npc yells #text.');
INSERT INTO `command` VALUES ('pdump load', '3', 'Syntax: .pdump load $filename $account [$newname] [$newguid]Load character dump from dump file into character list of $account with saved or $newname, with saved (or first free) or $newguid guid.');
INSERT INTO `command` VALUES ('pdump write', '3', 'Syntax: .pdump write $filename $playerNameOrGUIDWrite character dump with name/guid $playerNameOrGUID to file $filename.');
INSERT INTO `command` VALUES ('pinfo', '2', 'Syntax: .pinfo [$player_name]Output account information for selected player or player find by $player_name.');
INSERT INTO `command` VALUES ('pool', '2', 'Syntax: .pool #pool_id\r\n\r\nPool information and full list creatures/gameobjects included in pool.');
INSERT INTO `command` VALUES ('pool list', '2', 'Syntax: .pool list\r\n\r\nList of pools with spawn in current map (only work in instances. Non-instanceable maps share pool system state os useless attempt get all pols at all continents.');
INSERT INTO `command` VALUES ('pool spawns', '2', 'Syntax: .pool spawns #pool_id\r\n\r\nList current creatures/objects listed in pools (or in specific #pool_id) and spawned (added to grid data, not meaning show in world.');
INSERT INTO `command` VALUES ('quest add', '3', 'Syntax: .quest add #quest_idAdd to character quest log quest #quest_id. Quest started from item can\'t be added by this command but correct .additem call provided in command output.');
INSERT INTO `command` VALUES ('quest complete', '3', 'Syntax: .quest complete #questidMark all quest objectives as completed for target character active quest. After this target character can go and get quest reward.');
INSERT INTO `command` VALUES ('quest remove', '3', 'Syntax: .quest remove #quest_idSet quest #quest_id state to not completed and not active (and remove from active quest list) for selected player.');
INSERT INTO `command` VALUES ('quit', '4', 'Syntax: quit\r\n\r\nClose RA connection. Command must be typed fully (quit).');
INSERT INTO `command` VALUES ('recall', '1', 'Syntax: .recall [$playername]Teleport $playername or selected player to the place where he has been before last use of a teleportation command. If no $playername is entered and no player is selected, it will teleport you.');
INSERT INTO `command` VALUES ('reload all', '3', 'Syntax: .reload allReload all tables with reload support added and that can be _safe_ reloaded.');
INSERT INTO `command` VALUES ('reload all_area', '3', 'Syntax: .reload all_areaReload all `areatrigger_*` tables if reload support added for this table and this table can be _safe_ reloaded.');
INSERT INTO `command` VALUES ('reload all_eventai', '3', 'Syntax: .reload all_eventai\r\n\r\nReload `creature_ai_*` tables if reload support added for these tables and these tables can be _safe_ reloaded.');
INSERT INTO `command` VALUES ('reload all_item', '3', 'Syntax: .reload all_item\r\n\r\nReload `item_required_target`, `page_texts` and `item_enchantment_template` tables.');
INSERT INTO `command` VALUES ('reload all_locales', '3', 'Syntax: .reload all_localesReload all `locales_*` tables with reload support added and that can be _safe_ reloaded.');
INSERT INTO `command` VALUES ('reload all_loot', '3', 'Syntax: .reload all_lootReload all `*_loot_template` tables. This can be slow operation with lags for server run.');
INSERT INTO `command` VALUES ('reload all_npc', '3', 'Syntax: .reload all_npc\r\n\r\nReload `points_of_interest` and `npc_*` tables if reload support added for these tables and these tables can be _safe_ reloaded.');
INSERT INTO `command` VALUES ('reload all_quest', '3', 'Syntax: .reload all_questReload all quest related tables if reload support added for this table and this table can be _safe_ reloaded.');
INSERT INTO `command` VALUES ('reload all_scripts', '3', 'Syntax: .reload all_scripts\r\n\r\nReload `dbscripts_on_*` tables.');
INSERT INTO `command` VALUES ('reload all_spell', '3', 'Syntax: .reload all_spellReload all `spell_*` tables with reload support added and that can be _safe_ reloaded.');
INSERT INTO `command` VALUES ('reload config', '3', 'Syntax: .reload configReload config settings (by default stored in mangosd.conf). Not all settings can be change at reload: some new setting values will be ignored until restart, some values will applied with delay or only to new objects/maps, some values will explicitly rejected to change at reload.');
INSERT INTO `command` VALUES ('repairitems', '2', 'Syntax: .repairitemsRepair all selected player\'s items.');
INSERT INTO `command` VALUES ('reset all', '3', 'Syntax: .reset all spellsSyntax: .reset all talentsRequest reset spells or talents at next login each existed character.');
INSERT INTO `command` VALUES ('reset honor', '3', 'Syntax: .reset honor [Playername]  Reset all honor data for targeted character.');
INSERT INTO `command` VALUES ('reset level', '3', 'Syntax: .reset level [Playername]  Reset level to 1 including reset stats and talents.  Equipped items with greater level requirement can be lost.');
INSERT INTO `command` VALUES ('reset spells', '3', 'Syntax: .reset spells [Playername]  Removes all non-original spells from spellbook.. Playername can be name of offline character.');
INSERT INTO `command` VALUES ('reset stats', '3', 'Syntax: .reset stats [Playername]  Resets(recalculate) all stats of the targeted player to their original VALUESat current level.');
INSERT INTO `command` VALUES ('reset talents', '3', 'Syntax: .reset talents [Playername]  Removes all talents of the targeted player. Playername can be name of offline character.');
INSERT INTO `command` VALUES ('respawn', '3', 'Syntax: .respawnRespawn selected creature or respawn all nearest creatures (if none selected) and GO without waiting respawn time expiration.');
INSERT INTO `command` VALUES ('revive', '3', 'Syntax: .reviveRevive the selected player. If no player is selected, it will revive you.');
INSERT INTO `command` VALUES ('save', '0', 'Syntax: .saveSaves your character.');
INSERT INTO `command` VALUES ('saveall', '1', 'Syntax: .saveallSave all characters in game.');
INSERT INTO `command` VALUES ('send items', '3', 'Syntax: .send items #playername #subject\"\" \"\"#text\"\" itemid1[:count1] itemid2[:count2] ... itemidN[:countN]Send a mail to a player. Subject and mail text must be in \"\"\"\". If for itemid not provided related count values then expected 1, if count > max items in stack then items will be send in required amount stacks. All stacks amount in mail limited to 12.\"');
INSERT INTO `command` VALUES ('send mail', '1', 'Syntax: .send mail #playername #subject\"\" \"\"#text\"\"Send a mail to a player. Subject and mail text must be in \"\"\"\".\"');
INSERT INTO `command` VALUES ('send mass items', '3', 'Syntax: .send mass items #racemask|$racename|alliance|horde|all \"#subject\" \"#text\" itemid1[:count1] itemid2[:count2] ... itemidN[:countN]\r\n\r\nSend a mail to players. Subject and mail text must be in \"\". If for itemid not provided related count values then expected 1, if count > max items in stack then items will be send in required amount stacks. All stacks amount in mail limited to 12.');
INSERT INTO `command` VALUES ('send mass mail', '3', 'Syntax: .send mass mail #racemask|$racename|alliance|horde|all \"#subject\" \"#text\"\r\n\r\nSend a mail to players. Subject and mail text must be in \"\".');
INSERT INTO `command` VALUES ('send mass money', '3', 'Syntax: .send mass money #racemask|$racename|alliance|horde|all \"#subject\" \"#text\" #money\r\n\r\nSend mail with money to players. Subject and mail text must be in \"\".');
INSERT INTO `command` VALUES ('send message', '3', 'Syntax: .send message $playername $messageSend screen message to player from ADMINISTRATOR.');
INSERT INTO `command` VALUES ('send money', '3', 'Syntax: .send money #playername #subject\"\" \"\"#text\"\" #moneySend mail with money to a player. Subject and mail text must be in \"\"\"\".\"');
INSERT INTO `command` VALUES ('server corpses', '2', 'Syntax: .server corpsesTriggering corpses expire check in world.');
INSERT INTO `command` VALUES ('server exit', '4', 'Syntax: .server exitTerminate mangosd NOW. Exit code 0.');
INSERT INTO `command` VALUES ('server idlerestart', '3', 'Syntax: .server idlerestart #delayRestart the server after #delay seconds if no active connections are present (no players). Use #exist_code or 2 as program exist code.');
INSERT INTO `command` VALUES ('server idlerestart cancel', '3', 'Syntax: .server idlerestart cancelCancel the restart/shutdown timer if any.');
INSERT INTO `command` VALUES ('server idleshutdown', '3', 'Syntax: .server idleshutdown #delay [#exist_code]Shut the server down after #delay seconds if no active connections are present (no players). Use #exist_code or 0 as program exist code.');
INSERT INTO `command` VALUES ('server idleshutdown cancel', '3', 'Syntax: .server idleshutdown cancelCancel the restart/shutdown timer if any.');
INSERT INTO `command` VALUES ('server info', '0', 'Syntax: .server infoDisplay server version and the number of connected players.');
INSERT INTO `command` VALUES ('server log filter', '4', 'Syntax: .server log filter [($filtername|all) (on|off)]\r\n\r\nShow or set server log filters. If used \"all\" then all filters will be set to on/off state.');
INSERT INTO `command` VALUES ('server log level', '4', 'Syntax: .server log level [#level]\r\n\r\nShow or set server log level (0 - errors only, 1 - basic, 2 - detail, 3 - debug).');
INSERT INTO `command` VALUES ('server motd', '0', 'Syntax: .server motdShow server Message of the day.');
INSERT INTO `command` VALUES ('server plimit', '3', 'Syntax: .server plimit [#num|-1|-2|-3|reset|player|moderator|gamemaster|administrator]Without arg show current player amount and security level limitations for login to server, with arg set player linit ($num > 0) or securiti limitation ($num < 0 or security leme name. With `reset` sets player limit to the one in the config file');
INSERT INTO `command` VALUES ('server restart', '3', 'Syntax: .server restart #delayRestart the server after #delay seconds. Use #exist_code or 2 as program exist code.');
INSERT INTO `command` VALUES ('server restart cancel', '3', 'Syntax: .server restart cancelCancel the restart/shutdown timer if any.');
INSERT INTO `command` VALUES ('server set motd', '3', 'Syntax: .server set motd $MOTDSet server Message of the day.');
INSERT INTO `command` VALUES ('server shutdown', '3', 'Syntax: .server shutdown #delay [#exit_code]\r\n\r\nShut the server down after #delay seconds. Use #exit_code or 0 as program exit code.');
INSERT INTO `command` VALUES ('server shutdown cancel', '3', 'Syntax: .server shutdown cancelCancel the restart/shutdown timer if any.');
INSERT INTO `command` VALUES ('setskill', '3', 'Syntax: .setskill #skill #level [#max]Set a skill of id #skill with a current skill value of #level and a maximum value of #max (or equal current maximum if not provide) for the selected character. If no character is selected, you learn the skill.');
INSERT INTO `command` VALUES ('showarea', '3', 'Syntax: .showarea #areaidReveal the area of #areaid to the selected character. If no character is selected, reveal this area to you.');
INSERT INTO `command` VALUES ('stable', '3', 'Syntax: .stable\r\n\r\nShow your pet stable.');
INSERT INTO `command` VALUES ('start', '0', 'Syntax: .startTeleport you to the starting area of your character.');
INSERT INTO `command` VALUES ('summon', '1', 'Syntax: .summon [$charactername]Teleport the given character to you. Character can be offline.');
INSERT INTO `command` VALUES ('taxicheat', '1', 'Syntax: .taxicheat on/offTemporary grant access or remove to all taxi routes for the selected character. If no character is selected, hide or reveal all routes to you.Visited taxi nodes sill accessible after removing access.');
INSERT INTO `command` VALUES ('tele', '1', 'Syntax: .tele #locationTeleport player to a given location.');
INSERT INTO `command` VALUES ('tele add', '3', 'Syntax: .tele add $nameAdd current your position to .tele command target locations list with name $name.');
INSERT INTO `command` VALUES ('tele del', '3', 'Syntax: .tele del $nameRemove location with name $name for .tele command locations list.');
INSERT INTO `command` VALUES ('tele group', '1', 'Syntax: .tele group#locationTeleport a selected player and his group members to a given location.');
INSERT INTO `command` VALUES ('tele name', '1', 'Syntax: .tele name [#playername] #locationTeleport the given character to a given location. Character can be offline.');
INSERT INTO `command` VALUES ('ticket accept', '3', 'Syntax: .ticket accept (on|off)\nTurning on/off the whole ticket accepting system.');
INSERT INTO `command` VALUES ('ticket close', '2', 'Syntax: .ticket close (#ID|$name)\nClosing the ticket.');
INSERT INTO `command` VALUES ('ticket delete', '3', 'Syntax: .ticket delete (#ID|$name)\nDelete ticket from the list. It will reappear after server restart.');
INSERT INTO `command` VALUES ('ticket info', '1', 'Syntax: .ticket info\nInformation on the tickets and your relation to them.');
INSERT INTO `command` VALUES ('ticket list', '2', 'Syntax: .ticket list\nGet list of ticket IDs with player GUIDs and last change date.');
INSERT INTO `command` VALUES ('ticket meaccept', '2', 'Syntax: .ticket meaccept [(on|off)]\nSet you informing about incoming tickets, or show its status.');
INSERT INTO `command` VALUES ('ticket onlinelist', '2', 'Syntax: .ticket onlinelist\nGet list of the tickets for online players only.');
INSERT INTO `command` VALUES ('trigger', '2', 'Syntax: .trigger [#trigger_id|$trigger_shift-link|$trigger_target_shift-link]\r\n\r\nShow detail infor about areatrigger with id #trigger_id or trigger id associated with shift-link. If areatrigger id or shift-link not provided then selected nearest areatrigger at current map.');
INSERT INTO `command` VALUES ('trigger active', '2', 'Syntax: .trigger active\r\n\r\nShow list of areatriggers wiht activation zone including current character position.');
INSERT INTO `command` VALUES ('trigger near', '2', 'Syntax: .trigger near [#distance]\r\n\r\nOutput areatriggers at distance #distance from player. If #distance not provided use 10 as default value.');
INSERT INTO `command` VALUES ('unaura', '3', 'Syntax: .unaura #spellidRemove aura due to spell #spellid from the selected Unit.');
INSERT INTO `command` VALUES ('unban account', '3', 'Syntax: .unban account $NameUnban accounts for account name pattern.');
INSERT INTO `command` VALUES ('unban character', '3', 'Syntax: .unban character $NameUnban accounts for character name pattern.');
INSERT INTO `command` VALUES ('unban ip', '3', 'Syntax : .unban ip $IpUnban accounts for IP pattern.');
INSERT INTO `command` VALUES ('unlearn', '3', 'Syntax: .unlearn #spell [all]Unlearn for selected player a spell #spell.  If \'all\' provided then all ranks unlearned.');
INSERT INTO `command` VALUES ('unmute', '1', 'Syntax: .unmute $playerNameRestore chat messaging for any character from account of character $playerName.');
INSERT INTO `command` VALUES ('waterwalk', '2', 'Syntax: .waterwalk on/offSet on/off waterwalk state for selected player.');
INSERT INTO `command` VALUES ('wchange', '3', 'Syntax: .wchange #weathertype #statusSet current weather to #weathertype with an intensity of #status.#weathertype can be 1 for rain, 2 for snow, and 3 for sand. #status can be 0 for disabled, and 1 for enabled.');
INSERT INTO `command` VALUES ('whispers', '1', 'Syntax: .whispers on|offEnable/disable accepting whispers by GM from players. By default use mangosd.conf setting.');
INSERT INTO `command` VALUES ('wp show', '2', 'Syntax: .wp show command [dbGuid] [pathId [wpOrigin] ]\r\nwhere command can have one of the following values\r\non (to show all related wp)\r\nfirst (to see only first one)\r\nlast (to see only last one)\r\noff (to hide all related wp)\r\ninfo (to get more info about theses wp)\r\n\r\nFor using info you have to do first show on and than select a Visual-Waypoint and do the show info!\r\nwith pathId and wpOrigin you can specify which path to show (optional)');
INSERT INTO `command` VALUES ('wp export', '3', 'Syntax: .wp export [#creature_guid or Select a Creature] $filename');
INSERT INTO `command` VALUES ('wp add', '2', 'Syntax: .wp add [Selected Creature or dbGuid] [pathId [wpOrigin] ]');
INSERT INTO `command` VALUES ('wp modify', '2', 'Syntax: .wp modify command [dbGuid, id] [value]\r\nwhere command must be one of: waittime  | scriptid | orientation | del | move\r\nIf no waypoint was selected, one can be chosen with dbGuid and id.\r\nThe commands have the following meaning:\r\n waittime (Set the time the npc will wait at a point (in ms))\r\n scriptid (Set the DB-Script that will be executed when the wp is reached)\r\n orientation (Set the orientation of this point) \r\n del (Remove the waypoint from the path)\r\n move (Move the wayoint to the current position of the player)');
INSERT INTO `command` VALUES ('ticket surveyclose', '2', 'Syntax: .ticket surveyclose (#ID|$name)\nClosing the ticket with the user survey.');
INSERT INTO `command` VALUES ('debug recv', '3', 'Syntax: .debug recv\nYou send the opcode described in the server-side ropcode.txt file.');
